let board = [
    [" ", " ", " "],
    [" ", " ", " "],
    [" ", " ", " "]
]

let currentPlayer = "X"

func main() {
    while true {
        call printBoard()
        let move = getPlayerMove()
        if makeMove(move.x, move.y) {
            if checkWin() {
                call printBoard()
                print("Player " + currentPlayer + " wins!")
                break
            } else if isBoardFull() {
                call printBoard()
                print("It's a draw!")
                break
            }
            currentPlayer = (currentPlayer == "X") ? "O" : "X"
        } else {
            print("Invalid move. Please try again.")
        }
    }
}

func printBoard() {
    print("-------------")
    for row in board {
        print("| " + join(row, " | ") + " |")
    }
    print("-------------")
}

func getPlayerMove() {
    print("Player " + currentPlayer + ", enter your move (row and column): ")
    let row = int(IO().readLine("row> "))
    let col = int(IO().readLine("column> "))
    return {x: row, y: col}
}

func makeMove(x, y) {
    if x >= 0 and x < 3 and y >= 0 and y < 3 and board[x][y] == " " {
        board[x][y] = currentPlayer
        return true
    } else {
        return false
    }
}

func checkWin() {
    return (
        (board[0][0] == currentPlayer and board[0][1] == currentPlayer and board[0][2] == currentPlayer) or
        (board[1][0] == currentPlayer and board[1][1] == currentPlayer and board[1][2] == currentPlayer) or
        (board[2][0] == currentPlayer and board[2][1] == currentPlayer and board[2][2] == currentPlayer) or
        (board[0][0] == currentPlayer and board[1][0] == currentPlayer and board[2][0] == currentPlayer) or
        (board[0][1] == currentPlayer and board[1][1] == currentPlayer and board[2][1] == currentPlayer) or
        (board[0][2] == currentPlayer and board[1][2] == currentPlayer and board[2][2] == currentPlayer) or
        (board[0][0] == currentPlayer and board[1][1] == currentPlayer and board[2][2] == currentPlayer) or
        (board[0][2] == currentPlayer and board[1][1] == currentPlayer and board[2][0] == currentPlayer)
    )
}

func isBoardFull() {
    for row in board {
        for cell in row {
            if cell == " "
                return false
        }
    }
    return true
}

call main()
